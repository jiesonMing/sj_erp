<?php
// +----------------------------------------------------------------------
// | ThinkPHP [ WE CAN DO IT JUST THINK ]
// +----------------------------------------------------------------------
// | Copyright (c) 2006~2017 http://thinkphp.cn All rights reserved.
// +----------------------------------------------------------------------
// | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
// +----------------------------------------------------------------------
// | Author: zhangyajun <448901948@qq.com>
// +----------------------------------------------------------------------

namespace think\paginator\driver;

use think\Paginator;

class Bootstrap extends Paginator
{

    /*
     * 首页按钮
     * @param string $text
     * @return string
     */
    protected function getFirstButton($text = '首页'){
        $url = $this->url(0);

        if ($this->currentPage() <= 1) {
            return $this->getFirstPageWrapper($url,$text,0);
        }

        return $this->getFirstPageWrapper($url, $text,1);
    }

    /*
     * 尾页按钮
     * @param string $text
     * @return string
     */
    protected function getLastButton($text = '尾页'){
        $url = $this->url($this->lastPage());

        if (!$this->hasMore) {
            return $this->getLastPageWrapper($url,$text,0);
        }

        return $this->getLastPageWrapper($url, $text,1);
    }

    /**
     * 上一页按钮
     * @param string $text
     * @return string
     */
    protected function getPreviousButton($text = "&laquo;")
    {

        if ($this->currentPage() <= 1) {
            return $this->getDisabledTextWrapper($text);
        }

        $url = $this->url(
            $this->currentPage() - 1
        );

        return $this->getPageLinkWrapper($url, $text);
    }

    /**
     * 下一页按钮
     * @param string $text
     * @return string
     */
    protected function getNextButton($text = '&raquo;')
    {
        if (!$this->hasMore) {
            return $this->getDisabledTextWrapper($text);
        }

        $url = $this->url($this->currentPage() + 1);

        return $this->getPageLinkWrapper($url, $text);
    }

    /**
     * 页码按钮
     * @return string
     */
    protected function getLinks()
    {
        if ($this->simple)
            return '';

        $block = [
            'all'    => null,
            'first'  => null,
            'slider' => null,
            'last'   => null
        ];

        $side   = 2;
        $window = 2 * $side;

        if ($this->lastPage <= 5) {
            $block['all'] = $this->getUrlRange(1, $this->lastPage);
        } elseif ($this->currentPage < 5) {
            $block['first'] = $this->getUrlRange(1, 5);
        } elseif ($this->currentPage > ($this->lastPage - 4)) {
            $block['last']  = $this->getUrlRange($this->lastPage - 4, $this->lastPage);
        } else {
            $block['slider'] = $this->getUrlRange($this->currentPage - 2, $this->currentPage + 2);
        }

        $html = '';

        if(is_array($block['all'])){
            $html .= $this->getUrlLinks($block['all']);
        }

        if (is_array($block['first'])) {
            $html .= $this->getUrlLinks($block['first']);
            $html .= $this->getDots();
        }

        if (is_array($block['slider'])) {
            $html .= $this->getDots();
            $html .= $this->getUrlLinks($block['slider']);
            $html .= $this->getDots();
        }

        if (is_array($block['last'])) {
            $html .= $this->getDots();
            $html .= $this->getUrlLinks($block['last']);
        }

        return $html;
    }

    /*每页数量按钮*/
    protected function getRowLists(){
        $html='';
        if($this->listRows==10){
            $html.='<span class="selected">10</span>';
            $html.='<a href="'.$this->getRowListUrl(40).'">40</a>';
            $html.='<a href="'.$this->getRowListUrl(60).'">60</a>';
            $html.='<a class="radius_right" href="'.$this->getRowListUrl(100).'">100</a>';
        }
        if($this->listRows==40){
            $html.='<a href="'.$this->getRowListUrl(10).'">10</a>';
            $html.='<span class="selected">40</span>';
            $html.='<a href="'.$this->getRowListUrl(60).'">60</a>';
            $html.='<a class="radius_right" href="'.$this->getRowListUrl(100).'">100</a>';
        }
        if($this->listRows==60){
            $html.='<a href="'.$this->getRowListUrl(10).'">10</a>';
            $html.='<a href="'.$this->getRowListUrl(40).'">40</a>';
            $html.='<span class="selected">60</span>';
            $html.='<a class="radius_right" href="'.$this->getRowListUrl(100).'">100</a>';
        }
        if($this->listRows==100){
            $html.='<a href="'.$this->getRowListUrl(10).'">10</a>';
            $html.='<a href="'.$this->getRowListUrl(40).'">40</a>';
            $html.='<a href="'.$this->getRowListUrl(60).'">60</a>';
            $html.='<span class="selected radius_right">100</span>';
        }
        return $html;
    }

    /*获取每页数量url*/
    protected function getRowListUrl($num=10){
        $path=$this->options['path'];
        $url=$path.'?listRow='.$num;
        return $url;
    }

    /**
     * 渲染分页html
     * @return mixed
     */
    public function render()
    {
        if ($this->hasPages()) {
            if ($this->simple) {
                return sprintf(
                    '
                        <div class="flex">
                            <span class="radius_left">%d条记录/%d页</span>
                            %s
                        </div>
                        <div class="flex mg_left_10px">
                            %s %s %s %s
                        </div>',
                    $this->total(),
                    $this->lastPage(),
                    $this->getRowLists(),
                    $this->getFirstButton(),
                    $this->getPreviousButton('上一页'),
                    $this->getNextButton('下一页'),
                    $this->getLastButton()
                );
            } else {
                return sprintf(
                    '
                        <div class="flex">
                            <span class="radius_left">%d条记录/%d页</span>
                            %s
                        </div>
                        <div class="flex mg_left_10px">
                            %s %s %s %s %s
                        </div>',
                    $this->total(),
                    $this->lastPage(),
                    //$this->listRows(),
                    $this->getRowLists(),
                    $this->getFirstButton(),
                    $this->getPreviousButton('上一页'),
                    $this->getLinks(),
                    $this->getNextButton('下一页'),
                    $this->getLastButton()
                );
            }
        }
    }

    /*生成首页按钮*/
    protected function getFirstPageWrapper($url,$text,$isDis=0){
        if($isDis){
            return '<a class="radius_left" href="'.htmlentities($url).'">'.$text.'</a>';
        }else{
            return '<span class="radius_left">'.$text.'</span>';
        }
    }

    /*生成尾页按钮*/
    protected function getLastPageWrapper($url,$text,$isDis=0){
        if($isDis){
            return '<a class="radius_right" href="'.htmlentities($url).'">'.$text.'</a>';
        }else{
            return '<span class="radius_right">'.$text.'</span>';
        }
    }

    /**
     * 生成一个可点击的按钮
     *
     * @param  string $url
     * @param  int    $page
     * @return string
     */
    protected function getAvailablePageWrapper($url, $page)
    {
        return '<a href="' . htmlentities($url) . '">' . $page . '</a>';
    }

    /**
     * 生成一个禁用的按钮
     *
     * @param  string $text
     * @return string
     */
    protected function getDisabledTextWrapper($text)
    {
        return '<span>' . $text . '</span>';
    }

    /**
     * 生成一个激活的按钮
     *
     * @param  string $text
     * @return string
     */
    protected function getActivePageWrapper($text)
    {
        return '<span class="selected">' . $text . '</span>';
    }

    /**
     * 生成省略号按钮
     *
     * @return string
     */
    protected function getDots()
    {
        return '<span>&hellip;</span>';
    }

    /**
     * 批量生成页码按钮.
     *
     * @param  array $urls
     * @return string
     */
    protected function getUrlLinks(array $urls)
    {
        $html = '';

        foreach ($urls as $page => $url) {
            $html .= $this->getPageLinkWrapper($url, $page);
        }

        return $html;
    }

    /**
     * 生成普通页码按钮
     *
     * @param  string $url
     * @param  int    $page
     * @return string
     */
    protected function getPageLinkWrapper($url, $page)
    {
        if ($page == $this->currentPage()) {
            return $this->getActivePageWrapper($page);
        }

        return $this->getAvailablePageWrapper($url, $page);
    }
}
